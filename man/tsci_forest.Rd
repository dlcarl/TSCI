% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsci_forest.R
\name{tsci_forest}
\alias{tsci_forest}
\title{Two Stage Curvature Identification with Random Forests}
\usage{
tsci_forest(
  Y,
  D,
  Z,
  X = NULL,
  W = X,
  vio_space,
  create_nested_sequence = TRUE,
  intercept = TRUE,
  split_prop = 2/3,
  num_trees = 200,
  mtry = list(function(p) round(sqrt(p))),
  max_depth = 0,
  min_node_size = c(5, 10, 20),
  self_predict = TRUE,
  str_thol = 10,
  alpha = 0.05,
  nsplits = 10,
  mult_split_method = ifelse(nsplits > 1, "FWER", "DML"),
  parallel = "no",
  ncores = 1,
  cl = NULL,
  raw_output = ifelse(mult_split_method == "FWER", TRUE, FALSE)
)
}
\arguments{
\item{Y}{observations of the outcome variable. Either a numeric vector of length n
or a numeric matrix with dimension n by 1.}

\item{D}{observations of the treatment variable. Either a numeric vector of length n
or a numeric matrix with dimension n by 1.}

\item{Z}{observations of the instrumental variable(s). Either a numeric vector of length n
or a numeric matrix with dimension n by s.}

\item{X}{observations of baseline covariate(s). Either a numeric vector of length n
or a numeric matrix with dimension n by p or \code{NULL}
(if no covariates should be included).}

\item{W}{(transformed) observations of baseline covariate(s) used to fit the outcome model. Either a numeric vector of length n
or a numeric matrix with dimension n by p_w or \code{NULL}
(if no covariates should be included).}

\item{vio_space}{list with numeric vectors of length n and/or numeric matrices with n rows as elements to
specify the violation space candidates. See Details for more information.}

\item{create_nested_sequence}{logical. If \code{TRUE} the violation space candidates (in form of matrices)
are defined sequentially starting with an empty violation matrix and subsequently
adding the next element of \code{vio_space} to the current violation matrix.
If \code{FALSE} the violation space candidates (in form of matrices) are defined as the elements of \code{vio_space}.
See Details for more information.}

\item{intercept}{logical. If \code{TRUE} an intercept is included in the outcome model.}

\item{split_prop}{proportion of observations used to fit the outcome model. Has to be a value in (0, 1).}

\item{num_trees}{number of trees in random forests.
Can either be a single integer value or a vector containing multiple integer values to try.}

\item{mtry}{number of covariates to possibly split at in each node of the tree in random forests.
Can either be a single numeric value, a vector containing multiple numeric values, a single to try.
Can also be a list of single argument function(s) returning an integer, given the number of independent variables.
The values have to be positive integers not larger than the number of independent variables in the treatment model.}

\item{max_depth}{maximal tree depth in random forests.
Can either be a single integer value or a vector containing multiple integer values to try.
0 correspond to unlimited depth.}

\item{min_node_size}{minimal size of each leaf node in random forests.
Can either be a single integer value or a vector containing multiple integer values to try.}

\item{self_predict}{logical, if \code{FALSE} it sets the diagonal of the hat matrix
of each tree to zero to avoid self prediction and rescales the off-diagonal elements accordingly.}

\item{str_thol}{minimal value of the threshold of IV strength test.}

\item{alpha}{the significance level.}

\item{nsplits}{number of times the data will be split. Has to be an integer larger or equal 1.}

\item{mult_split_method}{method to calculate the standard errors and p-values.
and to construct the confidence intervals if multi-splitting is performed. Default is "FWER" if \code{nsplits} > 1 and
"DML" otherwise. See Details.}

\item{parallel}{One out of \code{"no"}, \code{"multicore"}, or \code{"snow"} specifying the parallelization method used.}

\item{ncores}{the number of cores to use.}

\item{cl}{either an parallel or snow cluster or \code{NULL}.}

\item{raw_output}{logical. If \code{TRUE} the coefficient and standard error estimates of each split will be returned.
This is only needed if \code{mult_split_method} equals "FWER" and the function \code{confint} will be used. Default is
\code{TRUE} if \code{mult_split_method} is \code{TRUE} and \code{FALSE} otherwise.}
}
\value{
A list containing the following elements:
\describe{
\item{\code{Coef_all}}{a series of point estimates of the treatment effect
for the different violation space candidates and the OLS estimate.}
\item{\code{sd_all}}{standard errors of Coef_all.}
\item{\code{pvall_all}}{p-values of the treatment effect estimates for the
different violation space candidates and for the OLS estimate.}
\item{\code{CI_all}}{confidence intervals for the treatment effect for the
different violation space candidates and for the OLS estimate.}
\item{\code{Coef_robust}}{the point estimators of the treatment effect for
the selected violation spaces.}
\item{\code{sd_robust}}{the standard errors of Coef_robust.}
\item{\code{pvall_all}}{p-values of the treatment effect estimates for the
selected violation spaces.}
\item{\code{CI_robust}}{confidence intervals for the treatment effect for
the selected violation spaces.}
\item{\code{iv_str}}{IV strength for the different violation space candidates.}
\item{\code{iv_thol}}{the threshold for the IV strength for the different violation space candidates.}
\item{\code{Qmax}}{a named vector containing the number of times the
violation space candidates were the largest acceptable violation space by
the IV strength test.
The value of the element named "OLS" is the number of times the instrument
was too weak even for the empty violation space.}
\item{\code{q_comp}}{a named vector containing the number of times the
violation space candidates were the selected violation space.
The value of the element named "OLS" is the number of times the instrument
was too weak even for the empty violation space.}
\item{\code{q_robust}}{a named vector containing the number of times the
violation space candidates were the selected violation space by the robust method.
The value of the element named "OLS" is the number of times the instrument
was too weak even for the empty violation space.}
\item{\code{invalidity}}{a named vector containing the number of times
the instrument was considered valid and invalid. The instrument is considered
invalid if the selected violation space is larger than the empty space.}
\item{\code{FirstStage_rse}}{residual standard error of the fitted treatment model.}
\item{\code{FirstStage_Rsquared}}{R-squared of the fitted treatment model.}
\item{\code{FirstStage_rse}}{a named vector containing the residual standard error of the fitted outcome model for each violation space candidate.}
\item{\code{FirstStage_Rsquared}}{a named vector containing the R-squared of the fitted outcome model for each violation space candidate.}
\item{\code{mse}}{the out-of-sample mean squared error of the fitted treatment model.}
\item{\code{FirstStage_model}}{the method used to fit the treatment model.}
\item{\code{FirstStage_params}}{the hyperparameter combination used to fit the treatment model.}
\item{\code{n_A1}}{number of observations in A1.}
\item{\code{n_A2}}{number of observations in A2.}
\item{\code{nsplits}}{number of data splits performed.}
\item{\code{mult_split_method}}{the method used to calculate the standard errors and p-values.}
\item{\code{alpha}}{the significance level used.}
}
}
\description{
\code{tsci_forest} implements Two Stage Curvature Identification
(Guo and BÃ¼hlmann 2022) with random forests. Through a data-dependent way it
tests for the smallest sufficiently large violation space among a pre-specified
sequence of nested violation space candidates. Point and uncertainty estimates
of the treatment effect for all violation space candidates including the
selected violation space will be returned amongst other relevant statistics.
}
\details{
The treatment and outcome models are assumed to be of the following forms:
\deqn{D_i = g(Z_i, X_i) + \delta_i}
\deqn{Y_i = \beta * D_i + h(Z_i, X_i) + \epsilon_i}
where \eqn{g(Z_i, X_i)} is estimated using a random forest and
\eqn{h(Z_i X_i)} is approximated using the violation space candidates and by
a linear combination of the columns in \code{W}. The errors are allowed to be heteroscedastic.
To avoid overfitting bias the data is randomly split into two subsets \eqn{A1} and \eqn{A2}
where the proportion of number of observations in the two sets is specified by \code{split_prop}.
\eqn{A2} is used to train the random forest and \eqn{A1} is used to fit the outcome model. \cr \cr
The package \code{ranger} is used to fit the random forest. If any of \code{num_trees},
\code{max_depth} or \code{min_node_size} has more than one value,
the best parameter combination is chosen by minimizing the out-of-bag mean squared error. \cr \cr
The violation space candidates should be in a nested sequence as otherwise nonsensical results can occur. The specification
of suitable violation space candidates is a crucial step because a poor approximation
of \eqn{h(Z_i, X_i)} might not address the bias caused by the violation of the IV assumption sufficiently.
The function \code{\link[TSML]{create_monomials}} can be used to create a predefined sequence of violation space candidates (monomials).  \cr \cr
\code{W} should be chosen to be flexible enough to approximate the functional form of how the covariates affect the outcome well
as otherwise the treatment estimator might be biased.\cr \cr
If \code{nsplits} is larger than 1, point estimates are aggregated by medians
and standard errors, p-values and confidence intervals are obtained by the method
specified by the parameter \code{mult_split_method}. 'DML' uses the approach by
Chernozhukov et al. (2018). 'FWER' uses the approach by Meinshausen et al. (2009)
and controls for the family-wise error rate. 'FWER' does not provide standard errors.
For large sample sizes a large values for \code{nsplits} can lead to a high
running time as for each split a new hat matrix must be calculated.
The same parameter combination for the random forest is used for all n splits and
is selected by a separate data split.
}
\examples{
# dimension
p <- 10
# sample size
n <- 1000
# interaction value
inter_val <- 1
# the IV strength
a <- 1
# violation strength
tau <- 1
f <- function(x) {a * (1 * sin(2 * pi * x) + 1.5 * cos(2 * pi * x))}
rho <- 0.5
Cov <- stats::toeplitz(rho^c(0 : p))
mu <- rep(0, p + 1)
# true effect
beta <- 1
alpha <- as.matrix(rep(-0.3, p))
gamma <- as.matrix(rep(0.2, p))
inter <- as.matrix(c(rep(inter_val, 5),rep(0, p - 5)))


# generate the data
mu_error <- rep(0,2)
Cov_error <- matrix(c(1, 0.5, 0.5,1), 2, 2)
Error <- MASS::mvrnorm(n, mu_error, Cov_error)
W_original <- MASS::mvrnorm(n, mu, Cov)
W <- pnorm(W_original)
# instrument variable
Z <- W[, 1]
# baseline covariates
X <- W[, -1]
# generate the treatment variable D
D <- f(Z) + X \%*\% alpha + Z * X \%*\% inter + Error[, 1]
# generate the outcome variable Y
Y <- D * beta + tau * Z + X \%*\% gamma + Error[, 2]


# Two Stage Random Forest
vio_space <- create_monomials(Z, 4, "monomials_main")
output_RF <- tsci_forest(Y, D, Z, X, , vio_space = vio_space)
# point estimates
output_RF$Coef_robust
# standard errors
output_RF$sd_robust
# confidence intervals
output_RF$CI_robust
}
\references{
\itemize{
\item{Zijian Guo, and Peter BÃ¼hlmann. Two Stage Curvature Identification with
Machine Learning: Causal Inference with Possibly Invalid Instrumental Variables.
\emph{arXiv:2203.12808}, 2022}
\item{Nicolai Meinshausen, Lukas Meier, and Peter BÃ¼hlmann. P-values for high-dimensional
regression. \emph{Journal of the American Statistical Association},
104(488):1671-1681, 2009. 16, 18}
\item{Victor Chernozhukov, Denis Chetverikov, Mert Demirer, Esther Duflo, Christian Hansen,
Whitney Newey, and James Robins. Double/debiased machine learning for treatment
and structural parameters: Double/debiased machine learning.
\emph{The Econometrics Journal}, 21(1), 2018. 4, 16, 18}
}
}
\seealso{
\code{\link[TSML]{tsci_boosting}} for TSCI with boosting. \cr \cr
\code{\link[TSML]{tsci_poly}} for TSCI with polynomial basis expansion. \cr \cr
\code{\link[TSML]{tsci_secondstage}} for TSCI with user provided hat matrix. \cr \cr
}
