% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsci_secondstage_selection.R
\name{tsci_secondstage_selection}
\alias{tsci_secondstage_selection}
\title{Performs violation space selection and estimates the effect of the treatment on the outcome.}
\usage{
tsci_secondstage_selection(
  Y,
  D,
  Cov_aug,
  A1_ind,
  weight,
  Q,
  rm_ind,
  intercept,
  layer,
  str_thol,
  alpha,
  method,
  alternative_bias_adjustment = FALSE
)
}
\arguments{
\item{Y}{the outcome vector.}

\item{D}{the treatment vector.}

\item{Cov_aug}{a matrix containing the violation space and the baseline covariates.}

\item{A1_ind}{indices of samples in A1.}

\item{weight}{n.A1 by n.A1 hat matrix of the first stage.}

\item{Q}{number of violation spaces to test, including no violation.}

\item{rm_ind}{the indices to remove to identify different violation space.}

\item{intercept}{logical, if \code{TRUE} an intercept is included in the outcome model.}

\item{layer}{logical, if \code{TRUE} violation space selection is performed.}

\item{str_thol}{numeric, the minimal value of the threshold of IV strength test.}

\item{alpha}{numeric, the significant level used for the CI intervals.}

\item{method}{the method that was used to get the hat matrix of the first stage.}

\item{alternative_bias_adjustment}{logical, if \code{TRUE} a slightly
different bias adjustment is used.}
}
\value{
a list containing the following the following components: \tabular{ll}{
\code{Coef_vec} \tab a named vector containing the coefficients for all tested violation spaces. \cr
\tab \cr
\code{sd_vec} \tab a named vector containing the standard errors of the coefficients
for all tested violation spaces. \cr
\tab \cr
\code{Coef_robust} \tab a named vector containing the coefficients of the selected violation space. \cr
\tab \cr
\code{sd_robust} \tab a named vector containing the standard errors of the coefficients
of the selected violation space. \cr
\tab \cr
\code{CI_robust} \tab a named vector containing the confidence intervals of the coefficients
of the selected violation space. \cr
\tab \cr
\code{iv_str} \tab a named vector containing the estimated instrumental variable strengths
of all tested violation spaces. \cr
\tab \cr
\code{iv_str} \tab a named vector containing the estimated necessary instrumental variable strengths
of all tested violation spaces. \cr
\code{SigmaSqD} \tab the estimated variance of the treatment model. \cr
\tab \cr
\code{SigmaSqY} \tab a named vector containing the estimated variances of the treatment model
of all tested violation spaces. \cr
\tab \cr
\code{SigmaSqY.Qmax} \tab the estimated variance of the treatment model
of the largest considered violation space. \cr
\tab \cr
\code{trace_T} \tab the trace of the M matrix. \cr
\tab \cr
\code{explained_iv} \tab a named vector containing the numerators of the estimated standard errors of the coefficients
of the selected violation space. \cr
\tab \cr
\code{Qmax} \tab the number of the largest considered violation space \cr
\tab \cr
\code{q_comp} \tab the number of the selected violation space \cr
\tab \cr
\code{q_robust} \tab the number of the selected violation space by the robust approach. \cr
\tab \cr
\code{invalidity} \tab logical, if \code{TRUE} the hypothesis of a valid instrument is rejected. \cr
\tab \cr
\code{run_OLS} \tab logical, if \code{TRUE} the instrument is weak even if it's assumed to be valid. \cr
\tab \cr
\code{run_OLS} \tab logical, if \code{TRUE} the instrument is weak for all tested non empty violation spaces. \cr
\tab \cr
}
}
\description{
Performs violation space selection and estimates the effect of the treatment on the outcome.
}
\examples{
n <- 100
Z <- rnorm(n)
X <- rnorm(n)
D <- Z + 2 * Z^2 + X + rnorm(n)
Y <- D + Z + X + rnorm(n)
Q <- 4
vio_space <- matrix(NA,n,0)
for (q in 1:(Q-1)) {
  vio_space <- cbind(Z^q,vio_space)
}
rm_ind <- rep(list(NA),Q-1)
for (i in 1:(Q-1)) {
  rm_ind[[i]] = 1:(Q-i)
}
Data <- data.frame("D" = D, "Z" = Z, "X" = X)
Data_A1 <- Data[c(1:50), ]
Data_A2 <- Data[-c(1:50), ]
params_xgboost <- list("nrounds" = 10, "eta" = 0.3, "max_depth" = 2, "subsample" = 1,
"colsample_bytree" = 1)
hatmatrix_xgboost <- get_l2boost_hatmatrix(Data_A1 = Data_A1, Data_A2 = Data_A2,
params = params_xgboost, xgboost = TRUE)
Cov_aug <- cbind(vio_space, X)
tsci_secondstage_selection(Y = Y, D = D, Cov_aug = Cov_aug, A1_ind = c(1:50),
  weight = hatmatrix_xgboost$weight, Q = Q, rm_ind = rm_ind, intercept = TRUE,
  layer = TRUE, str_thol = 20, alpha = 0.05, method = "BO")
}
