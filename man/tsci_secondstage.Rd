% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsci_secondstage.R
\name{tsci_secondstage}
\alias{tsci_secondstage}
\title{Two Stage Curvature Identification with User Provided Hat Matrix}
\usage{
tsci_secondstage(
  Y,
  D,
  Z,
  X,
  vio_space,
  weight,
  A1_ind = NULL,
  intercept = TRUE,
  str_thol = 10,
  alpha = 0.05
)
}
\arguments{
\item{Y}{observations of the outcome variable. Either a numeric vector of length n
or a numeric matrix with dimension n by 1.}

\item{D}{observations of the treatment variable. Either a numeric vector of length n
or a numeric matrix with dimension n by 1.}

\item{Z}{observations of the instrumental variable(s). Either a numeric vector of length n
or a numeric matrix with dimension n by s.}

\item{X}{observations of baseline covariate(s). Either a numeric vector of length n
or a numeric matrix with dimension n by p or \code{NULL}
(if no covariates should be included).}

\item{vio_space}{either a numeric matrix with dimension n by q or a list with
numeric vectors of length n and/or numeric matrices with n rows as elements to
specify the violation space candidates or \code{NULL}.
If a matrix or a list, then the violation space candidates (in form of matrices)
are defined sequentially starting with an empty violation matrix and subsequently
adding the next column of the matrix or element of the list to the current violation matrix.
See Details for more information.}

\item{weight}{the hat matrix of the treatment model.}

\item{A1_ind}{indices of the observations that wil be used to fit the outcome model.
Must be of same length as the number of rows and columns of \code{weight}.
If \code{NULL} all observations will be used.}

\item{intercept}{logical. If \code{TRUE} an intercept is included in the outcome model.}

\item{str_thol}{minimal value of the threshold of IV strength test.}

\item{alpha}{the significance level.}
}
\value{
A list containing the following elements:
\describe{
\item{\code{Coef_all}}{a series of point estimates of the treatment effect
for the different violation space candidates and the OLS estimate.}
\item{\code{sd_all}}{standard errors of Coef_all.}
\item{\code{pvall_all}}{p-values of the treatment effect estimates for the
different violation space candidates and for the OLS estimate.}
\item{\code{CI_all}}{confidence intervals for the treatment effect for the
different violation space candidates and for the OLS estimate.}
\item{\code{Coef_robust}}{the point estimators of the treatment effect for
the selected violation spaces.}
\item{\code{sd_robust}}{the standard errors of Coef_robust.}
\item{\code{pvall_all}}{p-values of the treatment effect estimates for the
selected violation spaces.}
\item{\code{CI_robust}}{confidence intervals for the treatment effect for
the selected violation spaces.}
\item{\code{iv_str}}{IV strength for the different violation space candidates.}
\item{\code{iv_thol}}{the threshold for the different violation space candidates.}
\item{\code{Qmax}}{a named vector containing the number of times the
violation space candidates were the largest acceptable violation space by
the IV strength test.
The value of the element named "OLS" is the number of times the instrument
was too weak even for the empty violation space.}
\item{\code{q_comp}}{a named vector containing the number of times the
violation space candidates were the selected violation space.
The value of the element named "OLS" is the number of times the instrument
was too weak even for the empty violation space.}
\item{\code{q_robust}}{a named vector containing the number of times the
violation space candidates were the selected violation space by the robust method.
The value of the element named "OLS" is the number of times the instrument
was too weak even for the empty violation space.}
\item{\code{invalidity}}{a named vector containing the number of times
the instrument was considered valid and invalid. The instrument is considered
invalid if the selected violation space is larger than the empty space.}
\item{\code{mse}}{the out-of-sample mean squared error of the treatment model.}
}
}
\description{
\code{tsci_secondstage} implements Two Stage Curvature Identification
(Guo and Bühlmann 2022) for a user-provided hat matrix. Through a data-dependent way it
tests for the smallest sufficiently large violation space among a pre-specified
sequence of nested violation space candidates. Point and uncertainty estimates
of the treatment effect for all violation space candidates including the
selected violation space will be returned amongst other relevant statistics.
}
\details{
The treatment and outcome models are assumed to be of the following forms:
\deqn{D_i = g(Z_i, X_i) + \delta_i}
\deqn{Y_i = \beta * D_i + h(Z_i, X_i) + \epsilon_i}
where \eqn{g(Z_i, X_i)} is assumed to be estimated by the user and
\eqn{h(Z_i X_i)} is approximated using the violation space candidates and by
a linear combination of baseline covariates. The errors are allowed to be heteroscedastic.
\eqn{A1} is used to fit the outcome model. \cr \cr
The violation space candidates are required to be in a nested sequence. The specification
of suitable violation space candidates is a crucial step because a poor approximation
of \eqn{h(Z_i, X_i)} might not address the bias caused by the violation of the IV assumption sufficiently.
The function \code{create_monomials} can be used to create such a nested sequence for a
predefined type of violation space candidates (monomials). \cr \cr
}
\examples{
# dimension
p <- 10
# sample size
n <- 1000
# interaction value
inter_val <- 1
# the IV strength
a <- 1
# violation strength
tau <- 1
f <- function(x) {a * (1 * sin(2 * pi * x) + 1.5 * cos(2 * pi * x))}
rho <- 0.5
Cov <- stats::toeplitz(rho^c(0 : p))
mu <- rep(0, p + 1)
# true effect
beta <- 1
alpha <- as.matrix(rep(-0.3, p))
gamma <- as.matrix(rep(0.2, p))
inter <- as.matrix(c(rep(inter_val, 5),rep(0, p - 5)))


# generate the data
mu_error <- rep(0,2)
Cov_error <- matrix(c(1, 0.5, 0.5,1), 2, 2)
Error <- MASS::mvrnorm(n, mu_error, Cov_error)
W_original <- MASS::mvrnorm(n, mu, Cov)
W <- pnorm(W_original)
# instrument variable
Z <- W[, 1]
# baseline covariates
X <- W[, -1]
# generate the treatment variable D
D <- f(Z) + X \%*\% alpha + Z * X \%*\% inter + Error[, 1]
# generate the outcome variable Y
Y <- D * beta + tau * Z + X \%*\% gamma + Error[, 2]

# get hat matrix of outcome model
A <- cbind(Z, Z^2, Z^3, Z^4, Z*X, X)
weight <- A \%*\% chol2inv(chol(t(A) \%*\% A)) \%*\% t(A)

# Two Stage User Defined
vio_space <- create_monomials(Z, 4, "monomials_main")
output <- tsci_secondstage(Y, D, Z, X, vio_space, weight)
# point estimates
output$Coef_robust
# standard errors
output$sd_robust
# confidence intervals
output$CI_robust

}
\references{
\itemize{
\item{Zijian Guo, and Peter Bühlmann. Two Stage Curvature Identification with
Machine Learning: Causal Inference with Possibly Invalid Instrumental Variables.
\emph{arXiv:2203.12808}, 2022}
\item{Nicolai Meinshausen, Lukas Meier, and Peter Bühlmann. P-values for high-dimensional
regression. \emph{Journal of the American Statistical Association},
104(488):1671-1681, 2009. 16, 18}
\item{Victor Chernozhukov, Denis Chetverikov, Mert Demirer, Esther Duflo, Christian Hansen,
Whitney Newey, and James Robins. Double/debiased machine learning for treatment
and structural parameters: Double/debiased machine learning.
\emph{The Econometrics Journal}, 21(1), 2018. 4, 16, 18}
}
}
